name: Angular Package Release

on:
  release:
    types: [created]

jobs:
  publish-ui-package:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      GITHUB_NPM_TOKEN: ${{secrets.GITHUB_TOKEN}}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://npm.pkg.github.com/
          cache: yarn
          scope: '@fitnesspassport'
      - name: Create .npmrc
        run: |
          echo "@FitnessPassport:registry=https://npm.pkg.github.com/" >> .npmrc
          echo "@fitnesspassport:registry=https://npm.pkg.github.com/" >> .npmrc
          echo "registry=https://npm.pkg.github.com/" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${GITHUB_NPM_TOKEN}" >> .npmrc
          echo "//registry.yarnpkg.com/:_authToken=${GITHUB_NPM_TOKEN}" >> .npmrc
          cat .npmrc
      - name: Check UI version is latest
        id: check
        run: |
          current_version=$(cat ./packages/ui/package.json | jq -r '.version')
          latest_version=$(npm view @FitnessPassport/ui version)
          echo "Current version: $current_version"
          echo "Latest version: $latest_version"
          if test "$current_version" = "$latest_version"; then
            echo "Current is the latest version: skipping release"
            echo "should_release=false" >>"$GITHUB_OUTPUT"
          else
            echo "Current is not the latest version: releasing"
            echo "should_release=true" >>"$GITHUB_OUTPUT"
          fi
      - name: Release
        if: ${{ steps.check.outputs.should_release == 'true' }}
        run: |
          yarn setup
          yarn ui publish --new-version $(cat ./packages/ui/package.json | jq -r '.version')
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

  publish-angular-package:
    needs: publish-ui-package
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      GITHUB_NPM_TOKEN: ${{secrets.GITHUB_TOKEN}}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://npm.pkg.github.com/
          cache: yarn
          scope: '@fitnesspassport'
      - name: Create .npmrc
        run: |
          echo "@FitnessPassport:registry=https://npm.pkg.github.com/" >> .npmrc
          echo "@fitnesspassport:registry=https://npm.pkg.github.com/" >> .npmrc
          echo "registry=https://npm.pkg.github.com/" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${GITHUB_NPM_TOKEN}" >> .npmrc
          echo "//registry.yarnpkg.com/:_authToken=${GITHUB_NPM_TOKEN}" >> .npmrc
          cat .npmrc
      - name: Check UI version is latest
        id: check
        run: |
          current_version=$(cat ./packages/angular/projects/ui-angular/package.json | jq -r '.version')
          latest_version=$(npm view @FitnessPassport/ui-angular version)
          echo "Current version: $current_version"
          echo "Latest version: $latest_version"
          if test "$current_version" = "$latest_version"; then
            echo "Current is the latest version: skipping release"
            echo "should_release=false" >>"$GITHUB_OUTPUT"
          else
            echo "Current is not the latest version: releasing"
            echo "should_release=true" >>"$GITHUB_OUTPUT"
          fi
      - name: Release
        if: ${{ steps.check.outputs.should_release == 'true' }}
        run: |
          yarn setup
          yarn angular publish --new-version $(cat ./packages/angular/projects/ui-angular/package.json | jq -r '.version')
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}